package com.jusfoun.dao.mapper;

import com.jusfoun.bean.RoleExtension;
import com.jusfoun.dao.BaseMapper;
import com.jusfoun.model.Role;
import com.jusfoun.model.RoleExample;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.ResultMap;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectKey;
import org.apache.ibatis.annotations.Update;

public interface RoleMapper extends BaseMapper<Role, RoleExample> {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table role
     *
     * @mbggenerated Wed May 24 10:47:32 CST 2017
     */
    int countByExample(RoleExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table role
     *
     * @mbggenerated Wed May 24 10:47:32 CST 2017
     */
    int deleteByExample(RoleExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table role
     *
     * @mbggenerated Wed May 24 10:47:32 CST 2017
     */
    @Delete({
        "delete from role",
        "where roleId = #{roleId,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer roleId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table role
     *
     * @mbggenerated Wed May 24 10:47:32 CST 2017
     */
    @Insert({
        "insert into role (roleName, roleDesc, ",
        "roleParentId, permissionName, ",
        "`status`, createTime, ",
        "updateTime)",
        "values (#{roleName,jdbcType=VARCHAR}, #{roleDesc,jdbcType=VARCHAR}, ",
        "#{roleParentId,jdbcType=INTEGER}, #{permissionName,jdbcType=VARCHAR}, ",
        "#{status,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP}, ",
        "#{updateTime,jdbcType=TIMESTAMP})"
    })
    @SelectKey(statement="SELECT LAST_INSERT_ID()", keyProperty="roleId", before=false, resultType=Integer.class)
    int insert(Role record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table role
     *
     * @mbggenerated Wed May 24 10:47:32 CST 2017
     */
    int insertSelective(Role record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table role
     *
     * @mbggenerated Wed May 24 10:47:32 CST 2017
     */
    List<Role> selectByExample(RoleExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table role
     *
     * @mbggenerated Wed May 24 10:47:32 CST 2017
     */
    @Select({
        "select",
        "roleId, roleName, roleDesc, roleParentId, permissionName, `status`, createTime, ",
        "updateTime",
        "from role",
        "where roleId = #{roleId,jdbcType=INTEGER}"
    })
    @ResultMap("BaseResultMap")
    Role selectByPrimaryKey(Integer roleId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table role
     *
     * @mbggenerated Wed May 24 10:47:32 CST 2017
     */
    int updateByExampleSelective(@Param("record") Role record, @Param("example") RoleExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table role
     *
     * @mbggenerated Wed May 24 10:47:32 CST 2017
     */
    int updateByExample(@Param("record") Role record, @Param("example") RoleExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table role
     *
     * @mbggenerated Wed May 24 10:47:32 CST 2017
     */
    int updateByPrimaryKeySelective(Role record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table role
     *
     * @mbggenerated Wed May 24 10:47:32 CST 2017
     */
    @Update({
        "update role",
        "set roleName = #{roleName,jdbcType=VARCHAR},",
          "roleDesc = #{roleDesc,jdbcType=VARCHAR},",
          "roleParentId = #{roleParentId,jdbcType=INTEGER},",
          "permissionName = #{permissionName,jdbcType=VARCHAR},",
          "`status` = #{status,jdbcType=TINYINT},",
          "createTime = #{createTime,jdbcType=TIMESTAMP},",
          "updateTime = #{updateTime,jdbcType=TIMESTAMP}",
        "where roleId = #{roleId,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(Role record);

    List<RoleExtension> selectRoleExtensionByUserId(String userId);
}
