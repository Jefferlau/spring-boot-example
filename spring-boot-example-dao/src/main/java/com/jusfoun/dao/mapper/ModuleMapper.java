package com.jusfoun.dao.mapper;

import com.jusfoun.dao.BaseMapper;
import com.jusfoun.model.Module;
import com.jusfoun.model.ModuleExample;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.ResultMap;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectKey;
import org.apache.ibatis.annotations.Update;

public interface ModuleMapper extends BaseMapper<Module, ModuleExample> {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table module
     *
     * @mbggenerated Wed May 24 10:47:07 CST 2017
     */
    int countByExample(ModuleExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table module
     *
     * @mbggenerated Wed May 24 10:47:07 CST 2017
     */
    int deleteByExample(ModuleExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table module
     *
     * @mbggenerated Wed May 24 10:47:07 CST 2017
     */
    @Delete({
        "delete from module",
        "where moduleId = #{moduleId,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer moduleId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table module
     *
     * @mbggenerated Wed May 24 10:47:07 CST 2017
     */
    @Insert({
        "insert into module (moduleName, moduleParentId, ",
        "moduleUrl, `status`, ",
        "createTime, updateTime)",
        "values (#{moduleName,jdbcType=VARCHAR}, #{moduleParentId,jdbcType=INTEGER}, ",
        "#{moduleUrl,jdbcType=VARCHAR}, #{status,jdbcType=TINYINT}, ",
        "#{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})"
    })
    @SelectKey(statement="SELECT LAST_INSERT_ID()", keyProperty="moduleId", before=false, resultType=Integer.class)
    int insert(Module record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table module
     *
     * @mbggenerated Wed May 24 10:47:07 CST 2017
     */
    int insertSelective(Module record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table module
     *
     * @mbggenerated Wed May 24 10:47:07 CST 2017
     */
    List<Module> selectByExample(ModuleExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table module
     *
     * @mbggenerated Wed May 24 10:47:07 CST 2017
     */
    @Select({
        "select",
        "moduleId, moduleName, moduleParentId, moduleUrl, `status`, createTime, updateTime",
        "from module",
        "where moduleId = #{moduleId,jdbcType=INTEGER}"
    })
    @ResultMap("BaseResultMap")
    Module selectByPrimaryKey(Integer moduleId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table module
     *
     * @mbggenerated Wed May 24 10:47:07 CST 2017
     */
    int updateByExampleSelective(@Param("record") Module record, @Param("example") ModuleExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table module
     *
     * @mbggenerated Wed May 24 10:47:07 CST 2017
     */
    int updateByExample(@Param("record") Module record, @Param("example") ModuleExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table module
     *
     * @mbggenerated Wed May 24 10:47:07 CST 2017
     */
    int updateByPrimaryKeySelective(Module record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table module
     *
     * @mbggenerated Wed May 24 10:47:07 CST 2017
     */
    @Update({
        "update module",
        "set moduleName = #{moduleName,jdbcType=VARCHAR},",
          "moduleParentId = #{moduleParentId,jdbcType=INTEGER},",
          "moduleUrl = #{moduleUrl,jdbcType=VARCHAR},",
          "`status` = #{status,jdbcType=TINYINT},",
          "createTime = #{createTime,jdbcType=TIMESTAMP},",
          "updateTime = #{updateTime,jdbcType=TIMESTAMP}",
        "where moduleId = #{moduleId,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(Module record);
}
