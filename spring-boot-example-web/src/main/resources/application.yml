spring:
  application:
    name: Spring Boot Example
  profiles:
     active: development

mybatis:
  mapper-locations: ['classpath*:com/jusfoun/mybatis/mapper/*.xml', 'classpath*:com/jusfoun/mybatis/manual/*.xml']
  type-aliases-package: classpath*:com.jusfoun.model
  # executor-type: BATCH 时，在事务中 insert 无法通过 selectKey 取得自增 ID
  executor-type: REUSE
  config-location: 'classpath:mybatis-config.xml'

management:
  security:
    roles: ROLE_ADMIN

---
debug: true

logging:
  file: logs/spring-boot-example-web.log
  level:
    org.springframework: info
    org.springframework.boot.autoconfigure.logging.AutoConfigurationReportLoggingInitializer: info
    com.jusfoun: trace

spring:
  profiles: development
  datasource:
    name: app
    username: root
    password: 12345678
    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:mysql://localhost:3306/spring_boot_example?allowMultiQueries=true&autoReconnect=true&characterEncoding=utf8&characterSetResults=utf8&zeroDateTimeBehavior=convertToNull&useSSL=false
    initialize: false
    type: com.alibaba.druid.pool.DruidDataSource
    # 下面为连接池的补充设置，应用到上面所有数据源中# 初始化大小，最小，最大
    initialSize: 1
    minIdle: 5
    max-active: 50
    # 配置获取连接等待超时的时间
    maxWait: 90000
    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    timeBetweenEvictionRunsMillis: 30000
    # 配置一个连接在池中最小生存的时间，单位是毫秒
    minEvictableIdleTimeMillis: 180000
    validationQuery: select 1
    testWhileIdle: true
    testOnBorrow: true
    testOnReturn: true
    # 打开PSCache，并且指定每个连接上PSCache的大小
    poolPreparedStatements: true
    maxPoolPreparedStatementPerConnectionSize: 20
    # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    filters: stat,wall,log4j
    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
    # 合并多个DruidDataSource的监控数据
    #spring.datasource.useGlobalDataSourceStat=true

  thymeleaf:
    cache: false

  mail:
      host: smtp.qiye.163.com
      username: liutiyang@jusfoun.com
      password:

server:
  port: 8080
  tomcat:
    uri-encoding: UTF-8
#  context-path: /carry

auth:
  client:
    clientId: sample-client
    clientSecret: secret
    accessTokenUri: http://localhost:8084/oauth/token
    userAuthorizationUri: http://localhost:8084/oauth/authorize
    authenticationScheme: query
    clientAuthenticationScheme: form
#    pre-established-redirect-uri: http://localhost:8090/login/github
#    registered-redirect-uri: http://localhost:8090/login/github
#    use-current-uri: false
  resource:
    userInfoUri: http://localhost:8080/user
